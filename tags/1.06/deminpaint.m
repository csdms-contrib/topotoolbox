function dem = deminpaint(dem,type,k)

% interpolate missing values in a raster
%
% Syntax
%
%     demf = deminpaint(dem,type,k)
%
% Description
% 
%     deminpaint fills gaps in a DEM generated by measurement 
%     errors or missing values. The user may choose between 
%     different techniques to fill the gaps. Note that the 
%     algorithm fills only pixels not connected to the DEM 
%     grid boundaries.
%
% Input
%
%     dem       digital elevation model with missing values
%               indicated by nans
%     type      fill algorithm 
%               'laplace' (default): laplace interpolation 
%                     as implemented in roifill
%               'fill': elevate all values in each connected
%                     region of missing values to the minimum
%                     value of the surrounding pixels
%               'nearest': nearest neighbor interpolation 
%                     using bwdist
%     k         if supplied, only connected components with 
%               or equal number of k pixels are filled. Others
%               remain nan
%
% Output
%
%     demf      processed digital elevation model
%
% Example
%     
%     load exampleDEM
%     I = full(sprand(size(dem,1),size(dem,2),0.05) > 0);
%     dem(I) = nan;
%     demf = deminpaint(dem);
% 
% See also: ROIFILL, FILLSINKS, BWDIST
%
% Author: Wolfgang Schwanghart (w.schwanghart[at]unibas.ch)
% Date: 15. March, 2009


if nargin == 1;
    type = 'laplace';
    k    = inf;
elseif nargin == 2;
    k    = inf;
end
   
% error checking    

% clean boundary
I = isnan(dem);
I = imclearborder(I);

if ~isinf(k)
    I = xor(bwareaopen(I,k+1),I);
end

% interpolation
switch lower(type)
    case 'nearest'
        % nearest neighbor interpolation
        [~,L] = bwdist(~I);
        dem = dem(L);
    case 'laplace'
        % use roifill
        dem = roifill(dem,imdilate(I,ones(3)));
    case 'fill'
        % fill to lowest surrounding neighbor
        marker = inf(size(dem));
        markerpixels = imdilate(I,ones(3)) & ~I;
        marker(markerpixels) = dem(markerpixels);
        mask = dem;
        mask(I | isnan(dem)) = -inf;
        demrec = -imreconstruct(-marker,-mask);
        dem(I) = demrec(I);
    otherwise
        error('type unknown')
end



